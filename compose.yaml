services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper
    depends_on:
      - kafka
      - zookeeper
  database:
    container_name: database
    image: postgres:latest
    ports:
      - "2004:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: vk
      POSTGRES_PASSWORD: 123
    volumes:
      - ./db-data:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "1307:6379"
  
  hello-world-api:
    container_name: main-api
    image: hello-world-api
    build:
      context: HelloWorldApi
      dockerfile: Dockerfile
    ports:
      - "1001:8080"
    depends_on:
      - database
      - redis
      - kafka-ui
  notifier:
    container_name: notifier
    image: notifier
    build:
      context: HttpTelegramNotifier
      dockerfile: Dockerfile
    ports:
      - "1002:8080"
    depends_on:
      - kafka-ui
      - hello-world-api

      
    

  